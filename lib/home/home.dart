import 'package:flutter/material.dart';

import 'package:flutter_refresh/flutter_refresh.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'dart:async';
import 'package:http/http.dart' as http;
import 'dart:convert';

import 'HomeBean.dart';
import 'BannerBean.dart';

import 'banner.dart';
import 'HomeWebview.dart';



class HomeMain extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    // TODO: implement createState
    return new HomePage();
  }
}

class HomePage extends State<HomeMain> {
  var rowNumber = 0;
  var lastFileID = "0";
  List<Datas> dataItems = new List();

  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    return new Scaffold(
      body: childFreshWidget(),
    );
  }

  @override
  void initState() {
    // TODO: implement initState
    getBanner();
    getNewsData(rowNumber);
  }

  // 顶部刷新
  Future<Null> onHeaderRefresh() {
    return new Future.delayed(new Duration(seconds: 2), () {
      setState(() {
        rowNumber = 0;
        getNewsData(rowNumber);
      });
    });
  }

// 底部刷新
  Future<Null> onFooterRefresh() async {
    return new Future.delayed(new Duration(seconds: 2), () {
      setState(() {
        rowNumber++;
        getNewsData(rowNumber);
      });
    });
  }

// 接口数据处理
  getNewsData(var page) async {
    await http
        .get('https://www.wanandroid.com/article/list/${page}/json')
        .then((response) {
      if (response.statusCode == 200) {
        var jsonRes = json.decode(response.body);
        //print(jsonRes);
        Autogenerated listdata = Autogenerated.fromJson(jsonRes);
        if (page == 0) {
          dataItems.clear();
        }
        setState(() {
          dataItems.addAll(listdata.data.datas);
        });
      }
    });
  }


  List<DataBean> dataBanner = new List();

  // 接口数据处理
  getBanner() async {
    await http
        .get('https://www.wanandroid.com/banner/json')
        .then((response) {
      if (response.statusCode == 200) {
        var jsonRes = json.decode(response.body);
       // print(jsonRes);
        BannerBean listdata = BannerBean.fromJson(jsonRes);
        setState(() {
          dataBanner = listdata.data;
        });
      }
    });
  }

  Widget childFreshWidget() {
    Widget childFreWi;
    childFreWi = new Padding(
      padding: EdgeInsets.only(bottom: 1.0),
      child: new Refresh(
        onFooterRefresh: onFooterRefresh,
        onHeaderRefresh: onHeaderRefresh,
        childBuilder: (BuildContext context,
            {ScrollController controller, ScrollPhysics physics}) {
          return new Container(
              child: new ListView.builder(
            physics: physics,
            controller: controller,
            itemCount: dataItems.length+1,
            itemBuilder: (context, item) {
             if(item == 0){
               return _itemBanner(context,dataBanner);
             }else {
               return _itemBuilderm(context, dataItems[item-1]);
             }
            },
          ));
        },
      ),
    );

    return childFreWi;
  }

  /***
   * bannder
   */
  Widget _itemBanner(BuildContext context,  List<DataBean> dataBanner) {
    return new Container(
        height: 200.0,
        child: BannerPage(dataBanner));
  }

  Widget _itemBuilderm(BuildContext context, Datas article) {
    return new Padding(
        padding: new EdgeInsets.only(top: 5.0, bottom: 2.0),
        child: new GestureDetector(
            onTap: () {
              Navigator.push(
                  context, new MaterialPageRoute(builder: (context) => HomeWebView(article.title,article.link)));
            },
            key: new Key(article.chapterName),
            child: Column(
              children: <Widget>[
                Row(
                  children: <Widget>[
                    Expanded(
                        flex: 1,
                        child: Padding(
                          padding: EdgeInsets.only(left: 10.0),
                          child: Text(
                            "${article.author}",
                            overflow: TextOverflow.ellipsis,
                            maxLines: 1,
                            style: TextStyle(
                                color: Colors.black38, fontSize: 12.0),
                          ),
                        )),
                    new Padding(
                        padding: EdgeInsets.only(right: 5.0),
                        child: new Text(
                          article.chapterName,
                          style:
                              TextStyle(color: Colors.black38, fontSize: 12.0),
                        )),
                  ],
                ),
                Item(context, article),
                new Container(
                  margin: EdgeInsets.only(top: 15.0),
                  height: 0.5,
                  decoration: new BoxDecoration(
                    color: Colors.black12,
                  ),
                )
              ],
            )));
  }

  Widget _itemView(BuildContext context, int index) {
    return new Container(
      child: Card(
        margin: EdgeInsets.all(5.0),
        child: new Text(dataItems[index].chapterName),
      ),
    );
  }

  Widget Item(BuildContext context, Datas article) {
    return new Container(
        margin: EdgeInsets.only(top: 10.0),
        padding: EdgeInsets.only(left: 10.0),
        height: 90.0,
        child: Row(
          children: <Widget>[
            new FadeInImage.assetNetwork(
              placeholder: 'images/loading_circle.gif',
              fit: BoxFit.fitWidth,
              image: article.envelopePic == ""
                  ? "http://wanandroid.com/resources/image/pc/default_project_img.jpg"
                  : article.envelopePic,
              width: 120.0,
              height: 90.0,
            ),
            new Flexible(
              flex: 1,
              child: new Container(
                  margin: EdgeInsets.only(left: 10.0),
                  padding: EdgeInsets.only(right: 5.0),
                  child: new Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: <Widget>[
                      new Expanded(
                          child: new Text(
                        article.title,
                        overflow: TextOverflow.ellipsis,
                      )),
                      new Text(
                        article.chapterName,
                        style: TextStyle(color: Colors.black38, fontSize: 12.0),
                      ),
                    ],
                  )),
            )
          ],
        ));
  }
}

class App extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    return new Scaffold(
      appBar: new AppBar(
        title: new Text("123"),
      ),
    );
  }
}
